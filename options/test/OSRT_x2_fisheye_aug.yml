# general settings
name: OSRT_x2_fisheye_aug
model_type: ODISRModel
scale: 2
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# test dataset settings
datasets:
  test_1:  # the 1st test dataset
    name: odisr_test
    type: ERPPairedImageDataset
    dataroot_gt: datasets/lau_dataset_clean/odisr/testing/HR
    dataroot_lq: datasets/lau_dataset_clean/odisr/testing/LR_fisheye/X2
    io_backend:
      type: disk
    condition_type: cos_latitude
  test_2:  # the 2nd test dataset
    name: sun_test
    type: ERPPairedImageDataset
    dataroot_gt: datasets/lau_dataset_clean/sun_test/HR
    dataroot_lq: datasets/lau_dataset_clean/sun_test/LR_fisheye/X2
    io_backend:
      type: disk
    condition_type: cos_latitude

# network structures
network_g:
  type: OSRT
  upscale: 2
  in_chans: 3
  img_size: 64
  window_size: 8
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 156
  c_dim: 156
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  condition_dim: 1
  vit_condition: [6, 6, 6, 6, 6, 6]
  vit_condition_type: '3conv'
  window_condition: true
  dcn_condition: [1, 1, 1, 1, 1, 1, 1]
  dcn_condition_type: '2conv'


# path
path:
  pretrain_network_g: pretrained_models/OSRT_x2_aug.pth
  param_key_g: params
  strict_load_g: true

# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
      better: higher  # the higher, the better. Default: higher
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false
      better: higher
    ws-psnr:
      type: calculate_psnr_ws
      crop_border: 0
      test_y_channel: false
      better: higher
    ws-ssim:
      type: calculate_ssim_ws
      crop_border: 0
      test_y_channel: false
      better: higher
